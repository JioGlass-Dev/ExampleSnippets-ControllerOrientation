{
  "api/JMRSDKExampleSnippets.ControllerOrientation.html": {
    "href": "api/JMRSDKExampleSnippets.ControllerOrientation.html",
    "title": "Class ControllerOrientation | JMR Samples",
    "keywords": "Class ControllerOrientation Move and orient the object with the controller. Inheritance Object ControllerOrientation Namespace : JMRSDKExampleSnippets Assembly : cs.temp.dll.dll Syntax public class ControllerOrientation : MonoBehaviour Fields additionalOffset Add additional offset to the object position Declaration public Vector3 additionalOffset Field Value Type Description Vector3 Methods LateUpdate() Get JMRPointer Ray; Orient the bow looking at the raycast, and add offset to the position of bow. Declaration public void LateUpdate()"
  },
  "api/JMRSDKExampleSnippets.html": {
    "href": "api/JMRSDKExampleSnippets.html",
    "title": "Namespace JMRSDKExampleSnippets | JMR Samples",
    "keywords": "Namespace JMRSDKExampleSnippets Classes ControllerOrientation Move and orient the object with the controller."
  },
  "index.html": {
    "href": "index.html",
    "title": "Controller Orientation | JMR Samples",
    "keywords": "Controller Orientation An example scene of controlling gameobject by using controller orientation. Summary This project have detailed scene for controlling the orientation of GameObject (bow) with the help of JioGlass controller Scripts Class ControllerOrientation Move and orient the object with the controller. To get controller orientation cs Quaternion controllerOrientation = Quaternion.identity; try { source.TryGetPointerRotation(out controllerOrientation); } How to use Steps to follow: Download and unzip this project. Open the project using Unity Hub. Download and import the latest version of JMRSDK package. Open and play the ControllerOrientation scene from Assets/Scenes folder."
  },
  "manual/JMRSamples.html": {
    "href": "manual/JMRSamples.html",
    "title": "Sample | JMR Samples",
    "keywords": "Sample"
  }
}